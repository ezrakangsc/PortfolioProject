WebSite Queries
- Sample dataset aquired throguh Snowflake

-- Estimated Top sites
SELECT site, year, month, top_1_country, top_2_country, top_3_country, top_4_country, top_5_country
FROM "DATAFEEDS"."TOP_SITES_LITE"
WHERE site ='instagram.com' AND year=21 AND month=4


-- Let's look at top 10 site categories
SELECT site_category, COUNT(*)
FROM datafeeds.top_sites_lite
GROUP BY 1
ORDER BY COUNT(*) DESC; 

-- looking at count of branch categories in the top main category 
SELECT site_category, COUNT(*) 
FROM datafeeds.top_sites_lite
WHERE main_category = 'Computers_Electronics_and_Technology'
GROUP BY SITE_CATEGORY
ORDER BY 2 DESC; 

-- I want to find the average top 5 visits for each main_category and site_category 
SELECT site_category, avg_visits, rnk
FROM 
    (SELECT 
        main_category, 
        site_category, 
        ROUND(AVG(total_estimated_visits), 0) AS avg_visits, 
        DENSE_RANK() OVER (PARTITION BY main_category ORDER BY ROUND(AVG(total_estimated_visits), 0) DESC) AS rnk
    FROM datafeeds.top_sites_lite
    GROUP BY 1, 2
    ) 
WHERE rnk <= 5;

-- what percentage does main category 1 take up 
SELECT main_category, COUNT(*)/(SELECT COUNT(*) FROM datafeeds.top_sites_lite)*100 AS site_equity
FROM datafeeds.top_sites_lite
GROUP BY main_category
ORDER BY 2 DESC; 

-- return top 10 % of sites 
SELECT main_category, total_views
FROM 
(SELECT 
    main_category, 
    SUM(total_estimated_visits) AS total_views, 
    NTILE(10) OVER (ORDER BY SUM(total_estimated_visits) DESC) AS bin 
    FROM datafeeds.top_sites_lite 
    GROUP BY 1) a
WHERE bin = 1; 

-- case

-- what's the highest correlation for total_estimated_vists. 
SELECT 
    CORR(visits, pageviews) AS visits_pageviews, 
    CORR(visits, pages_per_visit) AS visits_pages_per_vist, 
    CORR(visits, bounce) AS visits_bounce, 
    CORR(visits, duration) AS visits_duration 
FROM 
    (SELECT
        site, 
        AVG(total_estimated_visits) AS visits, 
        AVG(total_estimated_pageviews) AS pageviews, 
        AVG(total_pages_per_visit) AS pages_per_visit, 
        AVG(total_bounce_rate) AS bounce, 
        AVG(total_visits_duration) AS duration
     FROM datafeeds.top_sites_lite
     GROUP BY 1) a; 
     

Patient Queries
- Practice Problems from https://www.sql-practice.com/

SELECT * FROM patients;

-- 1) Show all of the patients grouped into weight groups. 
-- Show the total amount of patients in each weight group. 
-- Order the list by the weight group decending

SELECT COUNT(*) AS patients_in_group, weight/10*10 AS weight_group FROM patients
  GROUP BY weight_group
  ORDER BY weight_group desc;
  -- Because weight is a integer, dividing by 10 automatically rounds down.
  -- We then multiply it by 10 to make their weight rounded down to the tens.
  -- If weight was a decimal number we could solve this by doing FLOOR(weight/10)*10
  
-- 2) Show patient_id, weight, height, isObese from the patients table.
-- Display isObese as a boolean 0 or 1. T = 1, F = 0
-- Obese is defined as weight(kg)/(height(m)2) >= 30.
-- weight is in units kg.
-- height is in units cm.
  
SELECT patient_id, weight, height, 
  (CASE 
    when weight/(POWER(height/100.0,2)) >= 30 THEN 1
    ELSE 0
  END) AS isObsese
FROM patients

-- 3) Show patient_id, first_name, last_name, and attending physician's specialty.
-- Show only the patients who has a primary_diagnosis as 'Dementia' 
-- and the physician's first name is 'Lisa' and last name is 'Cuddy'

-- Check patients, admissions, and physicians tables for required information

SELECT pa.patient_id, pa.first_name AS patient_first_name, pa.last_name AS patient_last_name, ph.specialty AS attending_physician_specialty
FROM patients pa
  JOIN admissions ad
    ON pa.patient_id = ad.patient_id
  JOIN physicians ph 
    ON ph.physician_id = ad.attending_physician_id
 WHERE primary_diagnosis = 'Dementia' 
   AND ph.first_name = 'Lisa' AND ph.last_name = 'Cuddy'
   
